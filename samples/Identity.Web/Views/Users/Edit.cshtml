@model LinFx.Identity.Web.Models.ManageViewModels.ApplicationUserEditModel
@{
    ViewData["Title"] = "编辑";
}

<h2>@ViewData["Title"]</h2>

<h4>用户信息</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="User.Id" />
            <input type="hidden" asp-for="User.Name" />
            <input type="hidden" asp-for="User.ConcurrencyStamp" />
            <div class="form-group">
                <label asp-for="User.Email" class="control-label"></label>
                <input asp-for="User.Email" class="form-control" />
                <span asp-validation-for="User.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.PhoneNumber" class="control-label"></label>
                <input asp-for="User.PhoneNumber" class="form-control" />
                <span asp-validation-for="User.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>角色</label>
                <p>
                    @for (var i = 0; i < Model.Roles.Length; i++)
                    {
                        <lable>
                            <input type="checkbox" asp-for="@Model.Roles[i].IsAssigned" />
                            <input asp-for="@Model.Roles[i].Name" />
                            <span>@Model.Roles[i].Name</span>
                        </lable>
                    }
                </p>
            </div>
            <div class="form-group">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">&lt;&lt;返回列表</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
